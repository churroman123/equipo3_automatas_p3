
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;

public class principal extends javax.swing.JFrame {

    public File fil=new File("C:/Users/Admin/Documents/NetBeansProjects/equipo1_automatas_p2/src/expresiones.txt");
    public FileReader archi;
    
    Parser parse;
    Analisis ana = new Analisis(this);
    private void lista(FileReader archi) {
        try {
            BufferedReader br = new BufferedReader(archi);
            String linea;
            while ((linea = br.readLine()) != null) {
                int idx_separador = linea.indexOf(",");
                if (idx_separador > 0) {
                    String nombre = linea.substring(0,idx_separador);
                    String r_str = linea.substring(idx_separador+1);
                    Patron p = new Patron(nombre, r_str);
                    getListaPatrones().addElement(p);
                }
            }
        } catch (IOException ex) {
            System.out.println(ex);
        }
    }

    JFileChooser seleccionar = new JFileChooser();
    public File archivo;
    FileInputStream entrada;
    FileOutputStream salida;
    File ultimoarchivo;
    Preferences pref;
    public Boolean b;

    public DefaultListModel<Patron> ListaPatrones;
    public DefaultListModel<Token> ListaToken;
    public DefaultListModel<Token> getListaToken() {
        if (ListaToken == null) {
            ListaToken = new DefaultListModel();
        }
        return ListaToken;
    }

    public DefaultListModel<Patron> getListaPatrones() {
        if (ListaPatrones == null) {
            ListaPatrones = new DefaultListModel();
        }
        return ListaPatrones;
    }
    

    public principal() {
        try {
            initComponents();
            pref = Preferences.userNodeForPackage(principal.class);
            String path = pref.get("archivo", "");
            System.out.println(path);
            ultimoarchivo = new File(path);
            String doc = abrir(ultimoarchivo);
            jTextArea1.setText(doc);
            archi = new FileReader(fil);
            lista(archi);
            jList1.setModel(getListaPatrones());
            jList2.setModel(getListaToken());
            parse = new Parser(this,ListaToken, ana.TablaSimbolo);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }

    public String abrir(File archivo) {
        String doc = "";
        try {
            entrada = new FileInputStream(archivo);
            int a;
            this.setTitle(archivo.getName());
            while ((a = entrada.read()) != -1) {
                char letra = (char) a;
                doc += letra;
                b = true;
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        return doc;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jButton_Analizar = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        btnLimpiar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        SinTextArea = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jSplitPane3 = new javax.swing.JSplitPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel7 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jBPROBAR = new javax.swing.JButton();
        jLProbar = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jBAGREGAR = new javax.swing.JButton();
        jBMODIFICAR = new javax.swing.JButton();
        jBELIMINAR = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        guardarJMI = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        JMAbrirPatron = new javax.swing.JMenuItem();
        jMGuardarPatron = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jButton1.setText("jButton1");

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ejemplo");

        jSplitPane1.setDividerLocation(400);
        jSplitPane1.setDividerSize(1);

        jButton_Analizar.setText("Analizar");
        jButton_Analizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AnalizarActionPerformed(evt);
            }
        });

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Guardar automaticamente");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("Editor de Texto"));
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Mensajes(error)"));
        jScrollPane3.setViewportView(jTextArea2);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_Analizar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Analizar)
                    .addComponent(jCheckBox1)
                    .addComponent(btnLimpiar))
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jSplitPane2.setDividerLocation(240);
        jSplitPane2.setDividerSize(1);

        jList2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "tokens"));
        jScrollPane7.setViewportView(jList2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane2.setLeftComponent(jPanel3);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable1);

        SinTextArea.setEditable(false);
        SinTextArea.setColumns(20);
        SinTextArea.setRows(5);
        jScrollPane5.setViewportView(SinTextArea);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );

        jSplitPane2.setRightComponent(jPanel4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2)
        );

        jSplitPane1.setRightComponent(jPanel2);

        jTabbedPane1.addTab("Editor", jSplitPane1);

        jSplitPane3.setDividerLocation(500);

        jList1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "CRUD Expresiones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(51, 51, 51))); // NOI18N
        jScrollPane4.setViewportView(jList1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
        );

        jSplitPane3.setLeftComponent(jPanel6);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("EXPRESIONES"));

        jLabel1.setText("NOMBRE:");

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jTextArea4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "PROBAR EXPRESION"));
        jScrollPane6.setViewportView(jTextArea4);

        jBPROBAR.setText("PROBAR");
        jBPROBAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPROBARActionPerformed(evt);
            }
        });

        jLProbar.setVisible(false);

        jLabel3.setText("REGEXP:");

        jBAGREGAR.setText("AGREGAR");
        jBAGREGAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAGREGARActionPerformed(evt);
            }
        });

        jBMODIFICAR.setText("MODIFICAR");
        jBMODIFICAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMODIFICARActionPerformed(evt);
            }
        });

        jBELIMINAR.setText("ELIMINAR");
        jBELIMINAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBELIMINARActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBPROBAR)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jBAGREGAR)
                                .addGap(18, 18, 18)
                                .addComponent(jBMODIFICAR)
                                .addGap(18, 18, 18)
                                .addComponent(jBELIMINAR))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))))
                        .addGap(0, 545, Short.MAX_VALUE))
                    .addComponent(jLProbar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1))
                .addGap(21, 21, 21)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAGREGAR)
                    .addComponent(jBMODIFICAR)
                    .addComponent(jBELIMINAR))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLProbar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBPROBAR)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jSplitPane3.setRightComponent(jPanel7);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3)
        );

        jTabbedPane1.addTab("Expresiones Regulares", jPanel5);

        jMenuBar1.setBorder(null);

        jMenu1.setText("File");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Documents\\NetBeansProjects\\equipo1_automatas_p2\\src\\open_file.png")); // NOI18N
        jMenuItem3.setText("Abrir archivo");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        guardarJMI.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        guardarJMI.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Documents\\NetBeansProjects\\equipo1_automatas_p2\\src\\save.png")); // NOI18N
        guardarJMI.setText("Guardar");
        guardarJMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarJMIActionPerformed(evt);
            }
        });
        jMenu1.add(guardarJMI);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Documents\\NetBeansProjects\\equipo1_automatas_p2\\src\\save_as.png")); // NOI18N
        jMenuItem2.setText("Guardar como");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator2);

        JMAbrirPatron.setText("abrir Patron");
        JMAbrirPatron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMAbrirPatronActionPerformed(evt);
            }
        });
        jMenu1.add(JMAbrirPatron);

        jMGuardarPatron.setText("Guardar Patron");
        jMGuardarPatron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMGuardarPatronActionPerformed(evt);
            }
        });
        jMenu1.add(jMGuardarPatron);
        jMenu1.add(jSeparator1);

        jMenuItem4.setText("Cerrar Archivo");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Run");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Admin\\Documents\\NetBeansProjects\\equipo1_automatas_p2\\src\\Run Command.png")); // NOI18N
        jMenuItem1.setText("Analizar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String guardarArchivo(File archivo, String documento) {
        String mensaje = null;
        try {
            salida = new FileOutputStream(archivo);
            byte[] bytxt = documento.getBytes();
            salida.write(bytxt);
            pref.put("archivo", archivo.getAbsolutePath());
            mensaje = "Archivo Guardado";
            b = true;
        } catch (IOException e) {
        }
        return mensaje;
    }
    private void guardarJMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarJMIActionPerformed
        archivo = ultimoarchivo;
        if (archivo != null && archivo.exists()) {
            if (archivo.getName().endsWith("txt")) {
                String Documento = jTextArea1.getText();
                String mensaje = guardarArchivo(archivo, Documento);
                if (mensaje != null) {
                    JOptionPane.showMessageDialog(null, mensaje);
                } else {
                    JOptionPane.showMessageDialog(null, "Archivo no compatible");
                }
            }
        } else {
            if (seleccionar.showDialog(null, "Guardar") == JFileChooser.APPROVE_OPTION) {
                archivo = seleccionar.getSelectedFile();
                if (archivo.getName().endsWith("txt")) {
                    ultimoarchivo = archivo;
                    String Documento = jTextArea1.getText();
                    String mensaje = guardarArchivo(archivo, Documento);
                    pref.put("ultimo archivo", archivo.getName());
                    b = true;
                    if (mensaje != null) {
                        JOptionPane.showMessageDialog(null, mensaje);
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no compatible");
                    }
                }
            }
        }
    }//GEN-LAST:event_guardarJMIActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Guardarcomo guardarC = new Guardarcomo(jTextArea1);
        guardarC.Guardarcomo();
        ultimoarchivo = guardarC.archivo;
        this.setTitle(guardarC.titulo);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Abrir abrir = new Abrir(this, jTextArea1);
        abrir.abrir();
        b = true;
        ultimoarchivo = archivo;
        this.setTitle(abrir.titulo);
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    public DefaultTableModel model = new DefaultTableModel();
    public void B_analiza() throws Parser.ErrorSintaxis {
        DefaultListModel model2 = (DefaultListModel)jList2.getModel();
        model2.clear();
        principal padre = null;
        if (jCheckBox1.isSelected()) {
            if (b == true) {
                guardarArchivo(ultimoarchivo, jTextArea1.getText());
                ana.Analizar(ultimoarchivo);
                model = new DefaultTableModel();
                model.addColumn("idx"+ana.tabla);
                model.addColumn("cadena");
                model.addColumn("num_linea");
                model.setRowCount(0);
                
                for (int i = 0; i < ana.tabla; i++) {
                    simbolo sim =ana.TablaSimbolo.get(i);
                    String[] fila = {String.valueOf(ana.TablaSimbolo.indexOf(ana.TablaSimbolo.get(i))), sim.lexer, String.valueOf(sim.num_linea)};
                  
                    model.addRow(fila);
                    
                }
                //model.addRow(lx.fila);
                jTable1.setModel(model);
                if (b == false) {
                    JOptionPane.showMessageDialog(null, "Abre un archivo o Escribe texto y guardalo", "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            } else if (!jCheckBox1.isSelected()) {
                guardarArchivo(ultimoarchivo, jTextArea1.getText());
            }
        }else{
            if (b == true) {
                guardarArchivo(ultimoarchivo, jTextArea1.getText());
                ana.Analizar(ultimoarchivo);
                
                model.addColumn("idx"+ana.tabla);
                model.addColumn("cadena");
                model.addColumn("num_linea");
                model.setRowCount(0);
               
                for (int i = 0; i < ana.tabla; i++) {
                    simbolo sim =ana.TablaSimbolo.get(i);
                    String[] fila = {String.valueOf(ana.TablaSimbolo.indexOf(ana.TablaSimbolo.get(i))), sim.lexer, String.valueOf(sim.num_linea)};
                    model.addRow(fila);
     
                }
                //model.addRow(lx.fila);
                jTable1.setModel(model);
                if (b == false) {
                    JOptionPane.showMessageDialog(null, "Abre un archivo o Escribe texto y guardalo", "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            } else if (!jCheckBox1.isSelected()) {
                guardarArchivo(ultimoarchivo, jTextArea1.getText());
            }
        }
            
    }
    
    private void jButton_AnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AnalizarActionPerformed
        try {
            // TODO add your handling code here:
            B_analiza();
            parse.analizar();
            
            
        } catch (Parser.ErrorSintaxis ex) {
             jTextArea2.append(ex.getMessage());
        }
    }//GEN-LAST:event_jButton_AnalizarActionPerformed
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       jButton_AnalizarActionPerformed(null);
    
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        b = false;
        jTextArea1.setText("");
        model.setRowCount(0);
        jTable1.setModel(model);
        this.setTitle("");
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jBAGREGARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAGREGARActionPerformed
        // TODO add your handling code here:
        getListaPatrones().addElement(new Patron(jTextField1.getText(), jTextField2.getText()));
        jTextField1.setText("");
        jTextField2.setText("");
    }//GEN-LAST:event_jBAGREGARActionPerformed

    private void jBMODIFICARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMODIFICARActionPerformed
        // TODO add your handling code here:
        Patron p = jList1.getSelectedValue();
        if (p != null) {
            p.setNombre(jTextField1.getText());
            p.setRegexp(jTextField2.getText());
            jList1.updateUI();
            jTextField1.setText("");
            jTextField2.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Error: no hay nada seleccionado");
        }
    }//GEN-LAST:event_jBMODIFICARActionPerformed

    private void jBELIMINARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBELIMINARActionPerformed
        // TODO add your handling code here:
        Patron p = jList1.getSelectedValue();
        if (p != null) {
            ListaPatrones.removeElement(p);
        } else {
            JOptionPane.showMessageDialog(null, "Error: no hay nada seleccionaste");
        }
    }//GEN-LAST:event_jBELIMINARActionPerformed

    private void jBPROBARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPROBARActionPerformed
        // TODO add your handling code here:
        Patron p=jList1.getSelectedValue();
        int idx_actual=0;
        String cad="";
        if(p!=null){
            String [] lineas = jTextArea4.getText().split("\n");
            for(int a=0;a<lineas.length;a++){
                String linea=lineas[a];
                while(idx_actual<linea.length()){
                        Pattern pattern = Pattern.compile("^"+p.getRegexp(),Pattern.CASE_INSENSITIVE);
                        String subs=linea.substring(idx_actual);
                        Matcher matcher = pattern.matcher(subs);
                        boolean matchFound = matcher.find();

                        if(matchFound){
                            cad+="Coincide! "+matcher.start()+","+matcher.end()+" , ";
                            idx_actual=4;
                        }else{
                            cad = "no coincide";
                            System.out.println("espacio");
                            idx_actual+=1;
                        }
                } 
            }
        }else
            JOptionPane.showMessageDialog(null,"Error: no hay nada seleccionaste");
        jLProbar.setVisible(true);
        jLProbar.setText(cad);
    }//GEN-LAST:event_jBPROBARActionPerformed

    private void JMAbrirPatronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMAbrirPatronActionPerformed
        try {
            // TODO add your handling code here:
            ListaPatrones.clear();
            BufferedReader lector;
            JFileChooser selector = new JFileChooser();

            selector.showOpenDialog(selector);
            fil = selector.getSelectedFile();
            archi = new FileReader(fil);
            lista(archi);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_JMAbrirPatronActionPerformed

    private void jMGuardarPatronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMGuardarPatronActionPerformed
        // TODO add your handling code here:
        String lista = "";
        Patron p;
        for (int i = 0; i < ListaPatrones.getSize(); i++) {
            p = ListaPatrones.get(i);
            lista += p.getNombre()+","+ p.getRegexp() + "\n";
        }
        try {
            FileWriter archi = new FileWriter(fil);
            archi.write(lista);
            archi.flush();
            archi.close();

        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMGuardarPatronActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        DefaultListModel model2 = (DefaultListModel)jList2.getModel();
        
        jTextArea2.setText(" ");
        for(int i = 0; i < model.getRowCount();i++){
            model.removeRow(i);
            i -= 1;
        }
        model2.clear();
        
    }//GEN-LAST:event_btnLimpiarActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem JMAbrirPatron;
    public javax.swing.JTextArea SinTextArea;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JMenuItem guardarJMI;
    private javax.swing.JButton jBAGREGAR;
    private javax.swing.JButton jBELIMINAR;
    private javax.swing.JButton jBMODIFICAR;
    private javax.swing.JButton jBPROBAR;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton_Analizar;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLProbar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<Patron> jList1;
    private javax.swing.JList<Token> jList2;
    private javax.swing.JMenuItem jMGuardarPatron;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    public javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
